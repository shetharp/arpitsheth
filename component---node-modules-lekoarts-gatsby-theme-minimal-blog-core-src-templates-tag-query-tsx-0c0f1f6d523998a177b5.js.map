{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tag-query.tsx","webpack:///./node_modules/@shetharp/gatsby-theme-polaroid/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx"],"names":["TagComponent","data","pageContext","allPost","posts","nodes","query"],"mappings":"+KAGeA,UCUA,YAA0D,IAA5BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,YACzCC,EAAYF,EAAZE,QAER,OAAO,kBAAC,IAAD,CAAKC,MAAOD,EAAQE,MAAOH,YAAaA,KDblCF,IAEFM,EAAQ","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx-0c0f1f6d523998a177b5.js","sourcesContent":["import { graphql } from \"gatsby\"\nimport TagComponent from \"../components/tag\"\n\nexport default TagComponent\n\nexport const query = graphql`\n  query($slug: String!, $formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, filter: { tags: { elemMatch: { slug: { eq: $slug } } } }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from \"react\";\nimport Tag from \"../../../components/tag\";\n\ntype Props = {\n  data: {\n    allPost: any;\n    [key: string]: any;\n  };\n  pageContext: any;\n};\n\nexport default function MinimalBlogCoreTag({ data, pageContext }: Props) {\n  const { allPost } = data;\n\n  return <Tag posts={allPost.nodes} pageContext={pageContext} />;\n}\n"],"sourceRoot":""}